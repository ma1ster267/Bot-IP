import telebot
from flask import Flask, request
import json
import os

TOKEN = '7805329225:7805329225:AAEwl-2XjKmfCQK0aZFJy-pdOyZ3ImlWmj0'  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω
WEBHOOK_URL = 'https://bot-ip-odhy.onrender.com'  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π URL
GROUP_ID = -1001992854284  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ ID –≤–∞—à–æ—ó –≥—Ä—É–ø–∏

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

HOMEWORK_FILE = "homework.json"
ADMIN_IDS = {5223717297, 1071290377, 1234567890}
USER_ID = 5223717297

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –î–ó
def load_homework():
    if os.path.exists(HOMEWORK_FILE):
        with open(HOMEWORK_FILE, 'r', encoding='utf-8') as file:
            return json.load(file)
    return {}

homework_dict = load_homework()
user_state = {}

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –î–ó
def save_homework():
    try:
        with open(HOMEWORK_FILE, 'w', encoding='utf-8') as file:
            json.dump(homework_dict, file, ensure_ascii=False, indent=4)
    except Exception as e:
        bot.send_message(USER_ID, f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –î–ó: {e}")

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
def create_main_keyboard():
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(telebot.types.KeyboardButton("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –î–ó ‚úèÔ∏è"))
    keyboard.add(telebot.types.KeyboardButton("–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –î–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞ üì§"))
    return keyboard

# –ú–µ–Ω—é –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
def create_subjects_keyboard():
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    for subject in homework_dict.keys():
        keyboard.add(telebot.types.KeyboardButton(subject))
    keyboard.add(telebot.types.KeyboardButton("–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è"))
    return keyboard

# –°—Ç–∞—Ä—Ç
@bot.message_handler(commands=["start"])
def start(message):
    if message.chat.type == 'private' and message.from_user.id in ADMIN_IDS:
        bot.reply_to(message, "üîπ –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:", reply_markup=create_main_keyboard())

# –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –î–ó
@bot.message_handler(func=lambda message: message.text == "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –î–ó ‚úèÔ∏è")
def edit_homework(message):
    if message.from_user.id in ADMIN_IDS:
        bot.reply_to(message, "üîπ –û–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=create_subjects_keyboard())
        user_state[message.from_user.id] = "editing_homework"

@bot.message_handler(func=lambda message: user_state.get(message.from_user.id) == "editing_homework")
def select_subject_to_edit(message):
    if message.text == "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è":
        bot.reply_to(message, "üîô –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.", reply_markup=create_main_keyboard())
        user_state.pop(message.from_user.id, None)
        return

    subject = message.text
    if subject in homework_dict:
        bot.reply_to(message, f"‚úèÔ∏è –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–µ –î–ó –¥–ª—è {subject} (–ø–æ–ø–µ—Ä–µ–¥–Ω—î: {homework_dict[subject]}):")
        user_state[message.from_user.id] = {"subject": subject}
        bot.register_next_step_handler(message, save_edited_homework)
    else:
        bot.reply_to(message, "‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∏–π –ø—Ä–µ–¥–º–µ—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

def save_edited_homework(message):
    user_id = message.from_user.id
    subject = user_state.get(user_id, {}).get("subject")

    if subject:
        if subject in homework_dict and homework_dict[subject]:
            homework_dict[subject] += f"\n{message.text}"
        else:
            homework_dict[subject] = message.text
        save_homework()

        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(telebot.types.KeyboardButton("–î–æ–¥–∞—Ç–∏ —â–µ"), telebot.types.KeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è"))
        bot.reply_to(message, f"‚úÖ –î–ó –¥–ª—è {subject} –æ–Ω–æ–≤–ª–µ–Ω–æ. –©–æ –¥–∞–ª—ñ?", reply_markup=keyboard)
    else:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è.")

@bot.message_handler(func=lambda message: message.text in ["–î–æ–¥–∞—Ç–∏ —â–µ", "–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è"])
def edit_more_or_finish(message):
    user_id = message.from_user.id
    if message.text == "–î–æ–¥–∞—Ç–∏ —â–µ":
        bot.reply_to(message, "üîπ –û–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=create_subjects_keyboard())
        user_state[user_id] = "editing_homework"
    elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è":
        bot.reply_to(message, "‚úÖ –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ.", reply_markup=create_main_keyboard())
        user_state.pop(user_id, None)

# –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –î–ó —É –≥—Ä—É–ø—É
@bot.message_handler(func=lambda message: message.text == "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –î–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞ üì§")
def send_homework_tomorrow(message):
    if message.from_user.id in ADMIN_IDS:
        if not homework_dict:
            bot.send_message(GROUP_ID, "‚ö†Ô∏è –î–æ–º–∞—à–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–µ–º–∞—î.")
            return

        homework_text = "\n\n".join([f"üìö <b>{subject}</b>: {hw}" for subject, hw in homework_dict.items()])
        bot.send_message(GROUP_ID, f"üì¢ <b>–î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞:</b>\n\n{homework_text}", parse_mode='HTML')
        bot.reply_to(message, "‚úÖ –î–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤ –≥—Ä—É–ø—É.")

# Webhook –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@app.route(f'/{TOKEN}', methods=['POST'])
def webhook():
    update = request.get_json()
    if update:
        bot.process_new_updates([telebot.types.Update.de_json(update)])
    return 'OK', 200

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Webhook
def set_webhook():
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)

if __name__ == "__main__":
    set_webhook()
    app.run(host="0.0.0.0", port=8080)  # –ë–µ–∑ ssl_context –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
