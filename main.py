import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import json
import os
from datetime import datetime

TOKEN = '7805329225:AAFhcb1Hngf6lMWag9g9Ttycvpu1TdiUdJY'
bot = telebot.TeleBot(TOKEN)

HOMEWORK_FILE = "homework.json"
ADMIN_IDS = {5223717297, 1071290377, 1234567890}  # –î–æ–¥–∞–π —Å–≤–æ—ó ID —Ç—É—Ç
USER_ID = 5223717297  # –¢–≤—ñ–π ID –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–º–∞—à–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
def load_homework():
    if os.path.exists(HOMEWORK_FILE):
        with open(HOMEWORK_FILE, 'r', encoding='utf-8') as file:
            return json.load(file)
    else:
        return {}

homework_dict = load_homework()
user_state = {}

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–æ–º–∞—à–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è —É —Ñ–∞–π–ª
def save_homework(homework_dict):
    try:
        with open(HOMEWORK_FILE, 'w', encoding='utf-8') as file:
            json.dump(homework_dict, file, ensure_ascii=False, indent=4)
        bot.send_message(USER_ID, "‚úÖ –î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ. –û—Å—å —Ñ–∞–π–ª:", parse_mode='HTML')
        with open(HOMEWORK_FILE, 'rb') as file:
            bot.send_document(USER_ID, file)
    except Exception as e:
        bot.send_message(USER_ID, f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –î–ó: {e}")

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
def create_main_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("–î–æ–¥–∞—Ç–∏ –î–ó ‚ûï"), KeyboardButton("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –î–ó ‚úèÔ∏è"))
    keyboard.add(KeyboardButton("–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –î–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞ üì§"))
    return keyboard

# –ú–µ–Ω—é –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
def create_subjects_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    for subject in homework_dict.keys():
        keyboard.add(KeyboardButton(subject))
    keyboard.add(KeyboardButton("–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è"))
    return keyboard

# –°—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥–∏
@bot.message_handler(commands=["start"])
def start(message):
    if message.chat.type == 'private' and message.from_user.id in ADMIN_IDS:
        bot.reply_to(message, "üîπ –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:", reply_markup=create_main_keyboard())

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –î–ó
@bot.message_handler(func=lambda message: message.text == "–î–æ–¥–∞—Ç–∏ –î–ó ‚ûï")
def add_homework(message):
    if message.from_user.id in ADMIN_IDS:
        bot.reply_to(message, "üîπ –û–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=create_subjects_keyboard())
        user_state[message.from_user.id] = "adding_homework"

@bot.message_handler(func=lambda message: user_state.get(message.from_user.id) == "adding_homework")
def receive_homework(message):
    subject = message.text
    if subject in homework_dict:
        bot.reply_to(message, f"‚úèÔ∏è –í–≤–µ–¥—ñ—Ç—å –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è {subject}:")
        user_state[message.from_user.id] = {"subject": subject, "new_homework": ""}
        bot.register_next_step_handler(message, save_new_homework)
    else:
        bot.reply_to(message, "‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∏–π –ø—Ä–µ–¥–º–µ—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

def save_new_homework(message):
    user_id = message.from_user.id
    if isinstance(user_state.get(user_id), dict):
        subject = user_state[user_id]["subject"]
        homework_dict[subject] = message.text
        save_homework(homework_dict)
        bot.reply_to(message, f"‚úÖ –î–ó –¥–ª—è {subject} –∑–±–µ—Ä–µ–∂–µ–Ω–æ.")
        user_state.pop(user_id, None)

# –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –î–ó
@bot.message_handler(func=lambda message: message.text == "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –î–ó ‚úèÔ∏è")
def edit_homework(message):
    if message.from_user.id in ADMIN_IDS:
        bot.reply_to(message, "üîπ –û–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=create_subjects_keyboard())
        user_state[message.from_user.id] = "editing_homework"

@bot.message_handler(func=lambda message: user_state.get(message.from_user.id) == "editing_homework")
def select_subject_to_edit(message):
    subject = message.text
    if subject in homework_dict:
        bot.reply_to(message, f"‚úèÔ∏è –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–µ –î–ó –¥–ª—è {subject} (–ø–æ–ø–µ—Ä–µ–¥–Ω—î: {homework_dict[subject]}):")
        user_state[message.from_user.id] = {"subject": subject}
        bot.register_next_step_handler(message, save_edited_homework)
    else:
        bot.reply_to(message, "‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∏–π –ø—Ä–µ–¥–º–µ—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

def save_edited_homework(message):
    user_id = message.from_user.id
    subject = user_state.get(user_id, {}).get("subject")

    if subject:
        homework_dict[subject] = message.text
        save_homework(homework_dict)
        bot.reply_to(message, f"‚úÖ –î–ó –¥–ª—è {subject} –æ–Ω–æ–≤–ª–µ–Ω–æ.")
        user_state.pop(user_id, None)
    else:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è.")

# –í–∏–±—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –î–ó
@bot.message_handler(func=lambda message: message.text == "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –î–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞ üì§")
def send_homework_tomorrow(message):
    if message.from_user.id in ADMIN_IDS:
        bot.reply_to(message, "üîπ –û–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∏ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ (–≤—ñ–¥–ø—Ä–∞–≤–ª—è–π—Ç–µ —ó—Ö –ø–æ —á–µ—Ä–∑—ñ). –ó–∞–≤–µ—Ä—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥–æ—é '–ì–æ—Ç–æ–≤–æ ‚úÖ':",
                     reply_markup=create_subjects_keyboard())
        user_state[message.from_user.id] = {"sending_homework": []}

@bot.message_handler(func=lambda message: user_state.get(message.from_user.id, {}).get("sending_homework") is not None)
def collect_subjects_to_send(message):
    user_id = message.from_user.id
    if message.text == "–ì–æ—Ç–æ–≤–æ ‚úÖ":
        subjects = user_state[user_id]["sending_homework"]
        if subjects:
            homework_text = "\n\n".join([f"üìö <b>{subj}</b>: {homework_dict.get(subj, '–ù–µ–º–∞—î –î–ó')}" for subj in subjects])
            bot.send_message(message.chat.id, f"üì¢ <b>–î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞:</b>\n\n{homework_text}", parse_mode='HTML')
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –í–∏ –Ω–µ –≤–∏–±—Ä–∞–ª–∏ –∂–æ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.")
        user_state.pop(user_id, None)
    elif message.text in homework_dict:
        user_state[user_id]["sending_homework"].append(message.text)
        bot.reply_to(message, f"‚úÖ {message.text} –¥–æ–¥–∞–Ω–æ. –û–±–µ—Ä—ñ—Ç—å —â–µ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ì–æ—Ç–æ–≤–æ ‚úÖ'.")
    else:
        bot.reply_to(message, "‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∏–π –ø—Ä–µ–¥–º–µ—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.polling(none_stop=True)
